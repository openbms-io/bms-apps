"""add optional bacnet properties

Revision ID: dc3c962443cb
Revises:
Create Date: 2025-08-22 15:45:23.567711

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "dc3c962443cb"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "deployment_config",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "organization_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("site_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("device_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("config_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_deployment_config_device_id"),
        "deployment_config",
        ["device_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_deployment_config_organization_id"),
        "deployment_config",
        ["organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_deployment_config_site_id"),
        "deployment_config",
        ["site_id"],
        unique=False,
    )
    op.add_column(
        "controller_points", sa.Column("min_pres_value", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("max_pres_value", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("high_limit", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("low_limit", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("resolution", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points",
        sa.Column("priority_array", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "controller_points", sa.Column("relinquish_default", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("cov_increment", sa.Float(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("time_delay", sa.Integer(), nullable=True)
    )
    op.add_column(
        "controller_points", sa.Column("time_delay_normal", sa.Integer(), nullable=True)
    )
    op.add_column(
        "controller_points",
        sa.Column("notification_class", sa.Integer(), nullable=True),
    )
    op.add_column(
        "controller_points",
        sa.Column("notify_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column("controller_points", sa.Column("deadband", sa.Float(), nullable=True))
    op.add_column(
        "controller_points",
        sa.Column("limit_enable", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "controller_points",
        sa.Column("event_enable", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "controller_points",
        sa.Column(
            "acked_transitions", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    op.add_column(
        "controller_points",
        sa.Column(
            "event_time_stamps", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    op.add_column(
        "controller_points",
        sa.Column(
            "event_message_texts", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    op.add_column(
        "controller_points",
        sa.Column(
            "event_message_texts_config",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
    )
    op.add_column(
        "controller_points",
        sa.Column("event_detection_enable", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "controller_points",
        sa.Column(
            "event_algorithm_inhibit_ref",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
    )
    op.add_column(
        "controller_points",
        sa.Column("event_algorithm_inhibit", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "controller_points",
        sa.Column("reliability_evaluation_inhibit", sa.Boolean(), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("controller_points", "reliability_evaluation_inhibit")
    op.drop_column("controller_points", "event_algorithm_inhibit")
    op.drop_column("controller_points", "event_algorithm_inhibit_ref")
    op.drop_column("controller_points", "event_detection_enable")
    op.drop_column("controller_points", "event_message_texts_config")
    op.drop_column("controller_points", "event_message_texts")
    op.drop_column("controller_points", "event_time_stamps")
    op.drop_column("controller_points", "acked_transitions")
    op.drop_column("controller_points", "event_enable")
    op.drop_column("controller_points", "limit_enable")
    op.drop_column("controller_points", "deadband")
    op.drop_column("controller_points", "notify_type")
    op.drop_column("controller_points", "notification_class")
    op.drop_column("controller_points", "time_delay_normal")
    op.drop_column("controller_points", "time_delay")
    op.drop_column("controller_points", "cov_increment")
    op.drop_column("controller_points", "relinquish_default")
    op.drop_column("controller_points", "priority_array")
    op.drop_column("controller_points", "resolution")
    op.drop_column("controller_points", "low_limit")
    op.drop_column("controller_points", "high_limit")
    op.drop_column("controller_points", "max_pres_value")
    op.drop_column("controller_points", "min_pres_value")
    op.drop_index(op.f("ix_deployment_config_site_id"), table_name="deployment_config")
    op.drop_index(
        op.f("ix_deployment_config_organization_id"), table_name="deployment_config"
    )
    op.drop_index(
        op.f("ix_deployment_config_device_id"), table_name="deployment_config"
    )
    op.drop_table("deployment_config")
    # ### end Alembic commands ###
